apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
  - port: 27107
  selector:
    app: mongodb
  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: bitnami/mongodb:latest
        name: mongodb
        env:
        ports:
        - containerPort: 27107
          name: mongodb
        #volumeMounts:
        #- name: mongodb-persistent-storage
        #  mountPath: /var/lib/mongodb
      #volumes:
      #- name: mongodb-persistent-storage
      #  persistentVolumeClaim:
      #    claimName: mongodb-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: webapp
spec:
  ports:
  - port: 8080
    targetPort: 8080       
    protocol: TCP
  selector:
    app: nodeapp
  type: LoadBalancer
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: webapp
spec:
  selector:
    matchLabels:
      app: nodeapp
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nodeapp
    spec:
      containers:
      - image: kepung/nodeapp
        name: nodeapp
        env:
        ports:
        - containerPort: 8080
          name: nodehttp
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: redis-master
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: k8s.gcr.io/redis:e2e  # or just image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
         